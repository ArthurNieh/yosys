library(demo) {
  cell(not) {
    area: 1;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A'"; }
  }
  cell(buf) {
    area: 2;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A"; }
  }
  cell(nand) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B)'"; }
  }
  cell(nor) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B)'"; }
  }
  cell(and) {
    area: 4;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B)"; }
  }
  cell(or) {
    area: 4;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B)"; }
  }
  cell(xor) {
    area: 7;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A *B') + (A' * B)"; }
  }
  cell(xnor) {
    area: 8;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A * B) + (A' * B')"; }
  }
  cell(dff) {
    area: 9;

    ff(IQ, IQN) {
      clocked_on: "CK";
      next_state: "D";
      clear: "!RN";  // Asynchronous reset (active-low)
      preset: "!SN"; // Asynchronous set (active-low)
    }
    pin(RN) {
      direction: input;
    }
    pin(SN) {
      direction: input;
    }
    pin(CK) {
      direction: input;
      clock: true;
    }
    pin(D) {
      direction: input;
    }
    pin(Q) {
      direction: output;
      function: "IQ";
    }
  }

}
